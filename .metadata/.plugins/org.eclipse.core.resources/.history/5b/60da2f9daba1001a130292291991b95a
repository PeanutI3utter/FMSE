#define rand	pan_rand
#define pthread_equal(a,b)	((a)==(b))
#if defined(HAS_CODE) && defined(VERBOSE)
	#ifdef BFS_PAR
		bfs_printf("Pr: %d Tr: %d\n", II, t->forw);
	#else
		cpu_printf("Pr: %d Tr: %d\n", II, t->forw);
	#endif
#endif
	switch (t->forw) {
	default: Uerror("bad forward move");
	case 0:	/* if without executable clauses */
		continue;
	case 1: /* generic 'goto' or 'skip' */
		IfNotBlocked
		_m = 3; goto P999;
	case 2: /* generic 'else' */
		IfNotBlocked
		if (trpt->o_pm&1) continue;
		_m = 3; goto P999;

		 /* PROC invariant */
	case 3: // STATE 1 - Authentication.pml:48 - [assert((((currentState==2)&&(fail>=3))||((currentState!=2)&&(fail<3))))] (0:0:0 - 1)
		IfNotBlocked
		reached[1][1] = 1;
		spin_assert((((((int)now.currentState)==2)&&(((int)now.fail)>=3))||((((int)now.currentState)!=2)&&(((int)now.fail)<3))), "(((currentState==2)&&(fail>=3))||((currentState!=2)&&(fail<3)))", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 4: // STATE 2 - Authentication.pml:49 - [-end-] (0:0:0 - 1)
		IfNotBlocked
		reached[1][2] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */

		 /* PROC Authentication */
	case 5: // STATE 1 - Authentication.pml:20 - [((currentState==0))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][1] = 1;
		if (!((((int)now.currentState)==0)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 6: // STATE 2 - Authentication.pml:21 - [printf('Init')] (0:0:0 - 1)
		IfNotBlocked
		reached[0][2] = 1;
		Printf("Init");
		_m = 3; goto P999; /* 0 */
	case 7: // STATE 3 - Authentication.pml:5 - [ev = login] (0:0:1 - 1)
		IfNotBlocked
		reached[0][3] = 1;
		(trpt+1)->bup.oval = ((P0 *)_this)->ev;
		((P0 *)_this)->ev = 2;
#ifdef VAR_RANGES
		logval("Authentication:ev", ((P0 *)_this)->ev);
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 8: // STATE 4 - Authentication.pml:6 - [ev = logout] (0:0:1 - 1)
		IfNotBlocked
		reached[0][4] = 1;
		(trpt+1)->bup.oval = ((P0 *)_this)->ev;
		((P0 *)_this)->ev = 1;
#ifdef VAR_RANGES
		logval("Authentication:ev", ((P0 *)_this)->ev);
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 9: // STATE 8 - Authentication.pml:24 - [(((fail<3)&&(ev==login)))] (0:0:1 - 1)
		IfNotBlocked
		reached[0][8] = 1;
		if (!(((((int)now.fail)<3)&&(((P0 *)_this)->ev==2))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: ev */  (trpt+1)->bup.oval = ((P0 *)_this)->ev;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->ev = 0;
		_m = 3; goto P999; /* 0 */
	case 10: // STATE 9 - Authentication.pml:24 - [fail = 0] (0:0:1 - 1)
		IfNotBlocked
		reached[0][9] = 1;
		(trpt+1)->bup.oval = ((int)now.fail);
		now.fail = 0;
#ifdef VAR_RANGES
		logval("fail", ((int)now.fail));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 11: // STATE 10 - Authentication.pml:24 - [currentState = 1] (0:0:1 - 1)
		IfNotBlocked
		reached[0][10] = 1;
		(trpt+1)->bup.oval = ((int)now.currentState);
		now.currentState = 1;
#ifdef VAR_RANGES
		logval("currentState", ((int)now.currentState));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 12: // STATE 11 - Authentication.pml:25 - [(((fail<2)&&(ev==login)))] (0:0:1 - 1)
		IfNotBlocked
		reached[0][11] = 1;
		if (!(((((int)now.fail)<2)&&(((P0 *)_this)->ev==2))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: ev */  (trpt+1)->bup.oval = ((P0 *)_this)->ev;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->ev = 0;
		_m = 3; goto P999; /* 0 */
	case 13: // STATE 12 - Authentication.pml:25 - [fail = (fail+1)] (0:0:1 - 1)
		IfNotBlocked
		reached[0][12] = 1;
		(trpt+1)->bup.oval = ((int)now.fail);
		now.fail = (((int)now.fail)+1);
#ifdef VAR_RANGES
		logval("fail", ((int)now.fail));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 14: // STATE 13 - Authentication.pml:25 - [currentState = 0] (0:0:1 - 1)
		IfNotBlocked
		reached[0][13] = 1;
		(trpt+1)->bup.oval = ((int)now.currentState);
		now.currentState = 0;
#ifdef VAR_RANGES
		logval("currentState", ((int)now.currentState));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 15: // STATE 14 - Authentication.pml:29 - [(((fail==2)&&(ev==login)))] (0:0:1 - 1)
		IfNotBlocked
		reached[0][14] = 1;
		if (!(((((int)now.fail)==2)&&(((P0 *)_this)->ev==2))))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: ev */  (trpt+1)->bup.oval = ((P0 *)_this)->ev;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->ev = 0;
		_m = 3; goto P999; /* 0 */
	case 16: // STATE 15 - Authentication.pml:30 - [fail = (fail+1)] (0:44:2 - 1)
		IfNotBlocked
		reached[0][15] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((int)now.fail);
		now.fail = (((int)now.fail)+1);
#ifdef VAR_RANGES
		logval("fail", ((int)now.fail));
#endif
		;
		/* merge: currentState = 2(44, 16, 44) */
		reached[0][16] = 1;
		(trpt+1)->bup.ovals[1] = ((int)now.currentState);
		now.currentState = 2;
#ifdef VAR_RANGES
		logval("currentState", ((int)now.currentState));
#endif
		;
		/* merge: .(goto)(0, 21, 44) */
		reached[0][21] = 1;
		;
		/* merge: .(goto)(0, 45, 44) */
		reached[0][45] = 1;
		;
		_m = 3; goto P999; /* 3 */
	case 17: // STATE 22 - Authentication.pml:33 - [((currentState==1))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][22] = 1;
		if (!((((int)now.currentState)==1)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 18: // STATE 23 - Authentication.pml:33 - [assert((fail==0))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][23] = 1;
		spin_assert((((int)now.fail)==0), "(fail==0)", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 19: // STATE 24 - Authentication.pml:34 - [printf('Authenticated')] (0:0:0 - 1)
		IfNotBlocked
		reached[0][24] = 1;
		Printf("Authenticated");
		_m = 3; goto P999; /* 0 */
	case 20: // STATE 25 - Authentication.pml:5 - [ev = login] (0:0:1 - 1)
		IfNotBlocked
		reached[0][25] = 1;
		(trpt+1)->bup.oval = ((P0 *)_this)->ev;
		((P0 *)_this)->ev = 2;
#ifdef VAR_RANGES
		logval("Authentication:ev", ((P0 *)_this)->ev);
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 21: // STATE 26 - Authentication.pml:6 - [ev = logout] (0:0:1 - 1)
		IfNotBlocked
		reached[0][26] = 1;
		(trpt+1)->bup.oval = ((P0 *)_this)->ev;
		((P0 *)_this)->ev = 1;
#ifdef VAR_RANGES
		logval("Authentication:ev", ((P0 *)_this)->ev);
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 22: // STATE 30 - Authentication.pml:37 - [((ev==logout))] (0:0:1 - 1)
		IfNotBlocked
		reached[0][30] = 1;
		if (!((((P0 *)_this)->ev==1)))
			continue;
		if (TstOnly) return 1; /* TT */
		/* dead 1: ev */  (trpt+1)->bup.oval = ((P0 *)_this)->ev;
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->ev = 0;
		_m = 3; goto P999; /* 0 */
	case 23: // STATE 31 - Authentication.pml:37 - [currentState = 0] (0:0:1 - 1)
		IfNotBlocked
		reached[0][31] = 1;
		(trpt+1)->bup.oval = ((int)now.currentState);
		now.currentState = 0;
#ifdef VAR_RANGES
		logval("currentState", ((int)now.currentState));
#endif
		;
		_m = 3; goto P999; /* 0 */
	case 24: // STATE 36 - Authentication.pml:40 - [((currentState==2))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][36] = 1;
		if (!((((int)now.currentState)==2)))
			continue;
		_m = 3; goto P999; /* 0 */
	case 25: // STATE 37 - Authentication.pml:41 - [assert((fail==3))] (0:0:0 - 1)
		IfNotBlocked
		reached[0][37] = 1;
		spin_assert((((int)now.fail)==3), "(fail==3)", II, tt, t);
		_m = 3; goto P999; /* 0 */
	case 26: // STATE 38 - Authentication.pml:42 - [printf('Locked')] (0:0:0 - 1)
		IfNotBlocked
		reached[0][38] = 1;
		Printf("Locked");
		_m = 3; goto P999; /* 0 */
	case 27: // STATE 39 - Authentication.pml:5 - [ev = login] (0:0:2 - 1)
		IfNotBlocked
		reached[0][39] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->ev;
		((P0 *)_this)->ev = 2;
#ifdef VAR_RANGES
		logval("Authentication:ev", ((P0 *)_this)->ev);
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: ev */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->ev = 0;
		_m = 3; goto P999; /* 0 */
	case 28: // STATE 40 - Authentication.pml:6 - [ev = logout] (0:0:2 - 1)
		IfNotBlocked
		reached[0][40] = 1;
		(trpt+1)->bup.ovals = grab_ints(2);
		(trpt+1)->bup.ovals[0] = ((P0 *)_this)->ev;
		((P0 *)_this)->ev = 1;
#ifdef VAR_RANGES
		logval("Authentication:ev", ((P0 *)_this)->ev);
#endif
		;
		if (TstOnly) return 1; /* TT */
		/* dead 2: ev */  
#ifdef HAS_CODE
		if (!readtrail)
#endif
			((P0 *)_this)->ev = 0;
		_m = 3; goto P999; /* 0 */
	case 29: // STATE 47 - Authentication.pml:45 - [-end-] (0:0:0 - 1)
		IfNotBlocked
		reached[0][47] = 1;
		if (!delproc(1, II)) continue;
		_m = 3; goto P999; /* 0 */
	case  _T5:	/* np_ */
		if (!((!(trpt->o_pm&4) && !(trpt->tau&128))))
			continue;
		/* else fall through */
	case  _T2:	/* true */
		_m = 3; goto P999;
#undef rand
	}

